# Generated by Django 5.1.4 on 2025-01-06 07:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.files.storage
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mosque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('subscription_expiry', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration_in_days', models.IntegerField()),
                ('benefits', models.JSONField(default=dict)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MasjidConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_sliders', models.IntegerField(default=5)),
                ('max_text_marquee', models.IntegerField(default=3)),
                ('prayer_duration_days', models.IntegerField(default=30)),
                ('allow_calendar_access', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='api.mosque')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('device_token', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('sso_device_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='api.mosque')),
            ],
        ),
        migrations.CreateModel(
            name='PrayerTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('fajr', models.TimeField()),
                ('dhuhr', models.TimeField()),
                ('asr', models.TimeField()),
                ('maghrib', models.TimeField()),
                ('isha', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prayer_times', to='api.mosque')),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_image', models.FileField(blank=True, max_length=300, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='http://127.0.0.1:8000/static/upload/file/', location='/file'), upload_to='')),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sliders', to='api.mosque')),
            ],
        ),
        migrations.AddField(
            model_name='mosque',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscribed_mosques', to='api.subscription'),
        ),
        migrations.CreateModel(
            name='TextMarquee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_marquees', to='api.mosque')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_mosque_admin', models.BooleanField(default=False)),
                ('is_device', models.BooleanField(default=False)),
                ('sso_user_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MosqueUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mosque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mosque_users', to='api.mosque')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mosque_roles', to='api.user')),
            ],
            options={
                'unique_together': {('user', 'mosque')},
            },
        ),
    ]
